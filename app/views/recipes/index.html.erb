<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Recipe Finder</title>
    <link rel="icon" href="favicon.ico" type="image/x-icon">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        :root {
            --primary-color: #B56CFF;
            --secondary-color: #393349;
            --accent-color: #FFE49D;
            --background-color: #17102A;
            --text-color: #E9E8EB;
        }
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            background-color: var(--background-color);
            color: var(--text-color);
        }
        input { width: 300px; padding: 10px; margin-right: 10px; }
        button { padding: 10px 15px; }
        .recipe { margin: 20px 0; }
        .highlight { color: green; font-weight: bold; }
        .partial-match { color: orange; font-weight: bold; }
        .spinner {
            display: none;
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left-color: #22a6b3;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .no-results {
            color: red;
            font-weight: bold;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1>Recipe Finder</h1>
    <input id="ingredients" type="text" placeholder="Enter ingredients (comma-separated)">
    <button onclick="searchRecipes()">Find Recipes</button>
    <div id="spinner" class="spinner"></div>
    <div id="recipes"></div>
    <div id="no-results" class="no-results" style="display: none;">No recipes found for the given ingredients.</div>

    <script>
        let currentPage = 1;
        let loading = false;

        async function searchRecipes() {
            currentPage = 1;
            const ingredients = document.getElementById('ingredients').value.trim();
            if (ingredients.length < 3) {
                alert('Please enter at least 3 characters.');
                return;
            }

            const searchTerms = ingredients.split(',').map(term => term.trim().toLowerCase());
            const spinner = document.getElementById('spinner');
            const noResults = document.getElementById('no-results');
            spinner.style.display = 'block';
            noResults.style.display = 'none';

            try {
                const response = await fetch(`/recipes/search?ingredients=${encodeURIComponent(ingredients)}&page=${currentPage}`);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const recipes = await response.json();

                spinner.style.display = 'none';

                const recipesContainer = document.getElementById('recipes');
                recipesContainer.innerHTML = '';

                if (!Array.isArray(recipes) || recipes.length === 0) {
                    noResults.style.display = 'block';
                    return;
                }

                appendRecipes(recipes, searchTerms);
            } catch (error) {
                console.error('Error fetching recipes:', error);
                spinner.style.display = 'none';
                noResults.style.display = 'block';
            }
        }

        async function loadMoreRecipes() {
            if (loading) return;
            loading = true;
            currentPage++;
            const ingredients = document.getElementById('ingredients').value.trim();
            const spinner = document.getElementById('spinner');
            spinner.style.display = 'block';

            try {
                const response = await fetch(`/recipes/search?ingredients=${encodeURIComponent(ingredients)}&page=${currentPage}`);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const recipes = await response.json();

                spinner.style.display = 'none';

                if (!Array.isArray(recipes) || recipes.length === 0) {
                    return;
                }

                const searchTerms = ingredients.split(',').map(term => term.trim().toLowerCase());
                appendRecipes(recipes, searchTerms);
            } catch (error) {
                console.error('Error fetching recipes:', error);
                spinner.style.display = 'none';
            } finally {
                loading = false;
            }
        }

        function appendRecipes(recipes, searchTerms) {
            const recipesContainer = document.getElementById('recipes');
            recipes.forEach(recipe => {
                const recipeDiv = document.createElement('div');
                recipeDiv.className = 'recipe';
                const ingredientsList = recipe.recipe_ingredients.map(recipe_ingredient => {
                    const ingredientName = recipe_ingredient.ingredient_name.toLowerCase();
                    let isExactMatch = searchTerms.includes(ingredientName);
                    let isPartialMatch = false;
                    searchTerms.forEach(element => {
                        if (element.includes(ingredientName) || ingredientName.includes(element)) {
                            isPartialMatch = true;
                        }
                    });
                    const className = isExactMatch ? 'highlight' : (isPartialMatch ? 'partial-match' : '');
                    const amount = recipe_ingredient.amount ? recipe_ingredient.amount + ' ' : '';
                    const measurement = recipe_ingredient.measurement ? recipe_ingredient.measurement + ' ' : '';
                    return `<li class="${className}">${amount}${measurement}${ingredientName}</li>`;
                }).join('');
                const imageUrl = recipe.image_url;
                recipeDiv.innerHTML = `
                    <h2>${recipe.title}</h2>
                    <p><strong>Prep Time:</strong> ${recipe.prep_time} mins</p>
                    <p><strong>Cook Time:</strong> ${recipe.cook_time} mins</p>
                    <p><strong>Ratings:</strong> ${recipe.ratings}</p>
                    <img src="${imageUrl}" alt="${recipe.title}" style="width: 200px;">
                    <h3>Ingredients:</h3>
                    <ul>${ingredientsList}</ul>
                `;
                recipesContainer.appendChild(recipeDiv);
            });
        }

        window.addEventListener('scroll', () => {
            if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 100) {
                loadMoreRecipes();
            }
        });
    </script>
</body>
</html>